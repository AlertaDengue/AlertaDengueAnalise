lines(density(ddd$tdigit[ddd$ano==2013]),main=2013)
lines(density(ddd$tdigit[ddd$ano==2014]),main=2014)
par(mfrow=c(1,1))
par(mfrow=c(1,1))
plot(density(ddd$tdigit[ddd$ano==2011]),col=1,xlab="")
lines(density(ddd$tdigit[ddd$ano==2012]),col=2)
lines(density(ddd$tdigit[ddd$ano==2013]),col=3)
lines(density(ddd$tdigit[ddd$ano==2014]),col=4)
plot(density(ddd$tdigit[ddd$ano==2011]),col=1,xlab="tempo até digitar",main="")
lines(density(ddd$tdigit[ddd$ano==2012]),col=2)
lines(density(ddd$tdigit[ddd$ano==2013]),col=3)
lines(density(ddd$tdigit[ddd$ano==2014]),col=4)
d1s <- subset(d,diasdigit<8)
d2s <- subset(d,diasdigit<15)
d3s <- subset(d,diasdigit<22)
st1 <- aggregate(d1s$SEM_PRI,by=list(d1s$SEM_PRI),FUN=length)
names(st1)<-c("SE","casos")
st1$SE<-as.numeric(as.character(st1$SE))
tail(st1)
st2 <- aggregate(d2s$SEM_PRI,by=list(d2s$SEM_PRI),FUN=length)
names(st2)<-c("SE","casos")
st2$SE<-as.numeric(as.character(st2$SE))
tail(st2)
st3 <- aggregate(d3s$SEM_PRI,by=list(d3s$SEM_PRI),FUN=length)
names(st3)<-c("SE","casos")
st3$SE<-as.numeric(as.character(st3$SE))
tail(st3)
par(mfrow=c(1,1),mar=c(3,5,2,1))
plot(st1$casos,type="l",ylim=c(0,max(st$casos)),ylab="casos notificados",xlab="tempo",col="red")
lines(st2$casos,col="green")
lines(st3$casos,col="blue")
lines(st$casos,col="black",lwd=2)
legend(150,8000,c("ate 1 semana atraso","2 semanas","3 semanas","todos os registros"),cex=0.8,lty=1,col=c("red","green","blue","black"))
par(mfrow=c(1,1),mar=c(3,5,2,1))
plot(st1$casos,type="l",ylim=c(0,max(st$casos)),ylab="casos notificados",xlab="tempo",col="red")
lines(st2$casos,col="green")
lines(st3$casos,col="blue")
lines(st$casos,col="black",lwd=2)
legend(150,8000,c("ate 1 semana atraso","2 semanas","3 semanas","todos os registros"),cex=0.8,lty=1,col=c("red","green","blue","black"))
title("dados SINAN sem correção para atraso de digitação")
par(mfrow=c(1,1),mar=c(3,5,2,1))
plot(st1$casos,type="l",ylim=c(0,max(st$casos)),ylab="casos notificados",xlab="tempo",col="red")
lines(st2$casos,col="green")
lines(st3$casos,col="blue")
lines(st$casos,col="black",lwd=2)
legend(150,8000,c("x=1","x=2","x=3","todos registros"),cex=0.8,lty=1,col=c("red","green","blue","black"))
title("dados SINAN digitados até x semanas")
par(mfrow=c(1,1))
plot(st1$casos/0.317,type="l",ylim=c(0,max(st$casos)),ylab="casos notificados",xlab="tempo",col="red")
lines(st2$casos/0.531,col="green")
lines(st3$casos/0.652,col="blue")
lines(st$casos,col="black",lty=2,lwd=1)
legend(150,8000,c("x=1","x=2","x=3","todos registros"),cex=0.8,lty=1,col=c("red","green","blue","black"))
title("dados notificação estimados a partir dos dados digitados")
par(mfrow=c(1,1))
plot(st1$casos/0.317,type="l",ylim=c(0,max(st$casos)),ylab="casos notificados",xlab="tempo",col="red")
lines(st2$casos/0.531,col="green")
lines(st3$casos/0.652,col="blue")
lines(st$casos,col="black",lwd=2)
legend(150,8000,c("x=1","x=2","x=3","todos registros"),cex=0.8,lty=1,col=c("red","green","blue","black"))
title("dados notificação estimados a partir dos dados digitados")
legend(10,80,c("digitado","notificado"),lty=1,col=1:2)
len=dim(casos)[1]
plot(casos$x[(len-22):(len-3)], type="l", xlab="",ylab="casos notificados no MRJ")
lines(casosm$x[(len-22):(len-3)], col=2)
legend(10,70,c("digitado","notificado"),lty=1,col=1:2)
axis(2)
le = dim(casos)[1]
len=dim(casos)[1]
plot(casos$x[(len-22):(len-3)], type="l", xlab="",ylab="casos notificados no MRJ")
lines(casosm$x[(len-22):(len-3)], col=2)
legend(10,60,c("digitado","notificado"),lty=1,col=1:2)
axis(2)
len=dim(casos)[1]
plot(casos$x[(len-22):(len-3)], type="l", xlab="",ylab="casos notificados no MRJ")
lines(casosm$x[(len-22):(len-3)], col=2)
legend(5,70,c("digitado","notificado"),lty=1,col=1:2)
axis(2)
plot(casos$x[(len-22):(len-3)], type="l", xlab="",ylab="casos notificados no MRJ")
lines(casosm$x[(len-22):(len-3)], col=2)
legend(5,75,c("digitado","notificado"),lty=1,col=1:2)
axis(2)
quantile(d$tnotif,probs=seq(0,1,by=0.05))
cumfreq[1:12]
cumfreq[1:20]
cumfreq[1:52]
cumfreq[1:20]
source("../fun/corrigecasos.r")
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta/geraAlerta")
source("../fun/corrigecasos.r")
source("../fun/corrigecasos.r")
source("../fun/corrigecasos.r")
d<-read.csv(dadosAPS)
d<-subset(d,SE>=201001)
listaAPS<-unique(d$APS)
for(i in 1:10) d$casosm[d$APS==listaAPS[i]] <-corrigecasos(d$casos[d$APS==listaAPS[i]])
dadosAPS <- paste("../",dadosAPS,sep="")
d<-read.csv(dadosAPS)
dadosAPS<-"dados_limpos/dadosAPS_201443.csv"
dadosAPS <- paste("../",dadosAPS,sep="")
d<-read.csv(dadosAPS)
d<-subset(d,SE>=201001)
listaAPS<-unique(d$APS)
for(i in 1:10) d$casosm[d$APS==listaAPS[i]] <-corrigecasos(d$casos[d$APS==listaAPS[i]])
casos <- aggregate(d[,"casos"],by=list(SE=d$SE),FUN=sum)
tail(casos)
casosm <- aggregate(d[,"casosm"],by=list(SE=d$SE),FUN=sum)
tail(casosm)
len=dim(casos)[1]
plot(casos$x[(len-22):(len-3)], type="l", xlab="",ylab="casos notificados no MRJ")
lines(casosm$x[(len-22):(len-3)], col=2)
legend(5,75,c("digitado","notificado"),lty=1,col=1:2)
axis(2)
dc <- d[d$APS=="AP1",c("SE","temp.min")]
dc <-na.omit(dc)
uSE <- max(dc$SE)
tapply(d$temp.min[d$SE==max(dc$SE)],d$APS[d$SE==max(dc$SE)],unique)
m = which(is.na(d$temp.min))
for (i in m) d$temp.min[i]<-(mean(d$temp.min[d$SE==d$SE[i]],na.rm=TRUE))
m = which(is.na(d$temp.min))
d2$Rt <-NA
d2$pRt1 <-NA
d2$Rtlr <-NA
d2$Rtur <-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],c("Rt","pRt1","Rtlr","Rtur")] <- Rt.beta((d2$casos[d2$APS==listaAPS[i]]))
d2$pRti <- d2$pRt1
d2$pRti[is.na(d2$pRt1)]<-d2$ptw1[is.na(d2$pRt1)]
par(mfrow=c(5,2),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$pRt1[d2$APS==listaAPS[j]],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$pRt1[d2$APS==listaAPS[j]],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$pRt1[231:251,d2$APS==listaAPS[j]],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
plot(d2$pRt1[d2$APS==listaAPS[j]][231:251],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$pRt1[d2$APS==listaAPS[j]][231:251],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
for (j in 1:10) {
plot(d2$Rt[d2$APS==listaAPS[j]][231:251],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$Rt[d2$APS==listaAPS[j]][231:251],ylim=range(0,1),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtlr,lty=2)
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$Rt[d2$APS==listaAPS[j]][231:251],ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtlr,lty=2)
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(1,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=2,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=2,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="blue")
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="blue")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="blue")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2,lwd=3)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2,lwd=3)
}
SE<-d$SE[d$APS=="AP1"]
d2 <- expand.grid(SE=SE,APS=listaAPS)
d2<-merge(d2,d[,c("SE","APS","data","tweets","estacao","casos","casosm","temp.min")],by=c("SE","APS"))
pop<-read.csv(file="../tabelas/populacao2010porAPS_RJ.csv")
d2<-merge(d2,pop)
d2<-d2[order(d2$APS,d2$SE),]
detcli <- function(temp,tempcrit=22,lag=3){
t1<-as.numeric(temp>tempcrit)
le <- length(t1)
ac <- t1[lag:le]
for(i in 1:(lag-1)) ac <- ac+t1[(lag-i):(le-i)]
c(rep(NA,(lag-1)),ac)
}
d2$alertaCli <- NA
for(i in 1:10) d2$alertaCli[which(d2$APS==listaAPS[i])] <-detcli(d2$temp.min[d2$APS==listaAPS[i]])
d2$Rtw <-NA  # Rt do tweet
d2$ptw1 <-NA # Prob(Rt tweet >1)
d2$Rtwlr <-NA # lim inf IC Rt tweet
d2$Rtwur <-NA  # lim sup IC Rt tweet
for(i in 1:10) d2[d2$APS==listaAPS[i],c("Rtw","ptw1","Rtwlr","Rtwur")] <- Rt.beta(d2$tweets[d2$APS==listaAPS[i]])
Rtgreat1 <- function(p1,pcrit=0.8,lag=0){
t1<-as.numeric(p1>pcrit)
ac<-t1
if (lag>0) {
le <- length(t1)
ini <- (lag+1)
ac <- t1[ini:le]
for(i in 1:(ini-1)) ac <- ac+t1[(ini-i):(le-i)]
ac<-c(rep(NA,(ini-1)),ac)
}
ac
}
for(i in 1:10) d2$twgreat1[d2$APS==listaAPS[i]] <-Rtgreat1(d2$ptw1[d2$APS==listaAPS[i]],pcrit=0.90,lag=0)
for(i in 1:10) d2$alertaRtweet[d2$APS==listaAPS[i]] <-Rtgreat1(d2$ptw1[d2$APS==listaAPS[i]],pcrit=0.90,lag=3)
d2$Rt <-NA
d2$pRt1 <-NA
d2$Rtlr <-NA
d2$Rtur <-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],c("Rt","pRt1","Rtlr","Rtur")] <- Rt.beta((d2$casosm[d2$APS==listaAPS[i]]))
d2$pRti <- d2$pRt1
d2$pRti[is.na(d2$pRt1)]<-d2$ptw1[is.na(d2$pRt1)]
for(i in 1:10) d2$Rtgreat1[d2$APS==listaAPS[i]] <-Rtgreat1(d2$pRti[d2$APS==listaAPS[i]],pcrit=0.90,lag=0)
for(i in 1:10) d2$alertaRt[d2$APS==listaAPS[i]] <-Rtgreat1(d2$pRti[d2$APS==listaAPS[i]],pcrit=0.90,lag=3)
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2,lwd=3)
}
dadosAPS<-"dados_limpos/dadosAPS_201443.csv"
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
vl = which(d2v$alertaRt>=3)
vl = which(d2v$alertaRt>=3)
which(d2v$alertaRt>=3)
which(d2v$alertaRt>=3)+1
?intersection
d2v$verde[ntersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
les = dim(d2v)[1]
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))
d2v$verde <- 0
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
def.cor<-function(d2v){
# d2v = dados de uma ap
les = dim(d2v)[1]
d2v$verde <- 0
d2v$amarelo <-0
d2v$laranja <-0
d2v$vermelho <-0
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
d2v$amarelo[intersect(6:les,which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3))]<-1
d2v$laranja[intersect(6:les,which(d2v$alertaRt>=3))]<-1
d2v$laranja[intersect(6:les,which(d2v$alertaRt>=3)+1)]<-1 # inercia para desligar
d2v$laranja[intersect(6:les,which(d2v$alertaRt>=3)+2)]<-1 # inercia para desligar
d2v$vermelho[intersect(6:les,which(d2v$alertaCasos==1))]<-1
d2v$vermelho[intersect(6:les,which(d2v$alertaCasos==1)+1)]<-1  # inercia para desligar
d2v$vermelho[intersect(6:les,which(d2v$alertaCasos==1)+2)]<-1   # inercia para desligar
d2v
}
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2$casos[d2$APS==listaAPS[i],]))
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2$casos[d2$APS==listaAPS[i],])
d2[d2$APS==listaAPS[i],]
d2v$verde<-NA
d2v$amarelo<-NA
d2v$laranja<-NA
d2v$vermelho<-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2$casos[d2$APS==listaAPS[i],])
i=1
d2$casos[d2$APS==listaAPS[i],]
d2[d2$APS==listaAPS[i],]
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2[d2$APS==listaAPS[i],])
d2$verde<-NA
d2$amarelo<-NA
d2$laranja<-NA
d2$vermelho<-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2[d2$APS==listaAPS[i],])
tail(d2)
plot.alerta2<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$verde==1),col="darkgreen",lwd=2)
abline(v=which(d2v$amarelo==1),col="yellow",lwd=2)
abline(v=which(d2v$laranja==1),col="orange",lwd=2)
abline(v=which(d2v$vermelho==1),col="red",lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta2(listaAPS[i])
}
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta2(listaAPS[i])
}
plot.alerta<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0),
col="darkgreen",lwd=2)
abline(v=which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3),col="yellow",lwd=2)
vl = which(d2v$alertaRt>=3)
abline(v=vl,col="orange",lwd=2)
abline(v=(vl+1),col="orange",lwd=2)
abline(v=(vl+2),col="orange",lwd=2)
abline(v=(vl+3),col="orange",lwd=2)
lines(1:les,d2v$casos)
v=which(d2v$alertaCasos==1)
abline(v=v,col="red",pch=16,lwd=2)
abline(v=(v+1),col="red",pch=16,lwd=2)
abline(v=(v+2),col="red",pch=16,lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
plot.alerta<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0),
col="darkgreen",lwd=2)
abline(v=which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3),col="yellow",lwd=2)
vl = which(d2v$alertaRt>=3)
abline(v=vl,col="orange",lwd=2)
abline(v=(vl+1),col="orange",lwd=2)
abline(v=(vl+2),col="orange",lwd=2)
abline(v=(vl+3),col="orange",lwd=2)
lines(1:les,d2v$casos)
v=which(d2v$alertaCasos==1)
abline(v=v,col="red",pch=16,lwd=2)
abline(v=(v+1),col="red",pch=16,lwd=2)
abline(v=(v+2),col="red",pch=16,lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
plot.alerta<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0),
col="darkgreen",lwd=2)
abline(v=which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3),col="yellow",lwd=2)
vl = which(d2v$alertaRt>=3)
abline(v=vl,col="orange",lwd=2)
abline(v=(vl+1),col="orange",lwd=2)
abline(v=(vl+2),col="orange",lwd=2)
abline(v=(vl+3),col="orange",lwd=2)
lines(1:les,d2v$casos)
v=which(d2v$alertaCasos==1)
abline(v=v,col="red",pch=16,lwd=2)
abline(v=(v+1),col="red",pch=16,lwd=2)
abline(v=(v+2),col="red",pch=16,lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
plot.alerta(listaAPS[i])
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
library(knitr)
library(markdown)
require(foreign)
rm(list=ls())
source("fun/callmongoclima.r")
dadosAPS<-"dados_limpos/dadosAPS_201443.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
