30000*0.26
1560+7800+5477
1600+7800+5500
14900+500+1000+5000
21400+13000
8000*0.24
3*15*340
3*15*340
30000*0.24
1/0.24
6000*0.24
10000*0.24
8000*0.24
7000*0.24
10*6*340*0.24
12000*0.24
3*15*340
3*15*340*0.24
8000*0.24
1000*0.24
11700+6000+500
18200+500+1000+5000
13000+380+34700
19000+500+1000+5000
25500+13380
25500+13000+380
fluxo = expand.grid(origem=tab$Local,destino=tab$Local)
d<-read.csv(file="tab.csv")
str(d)
setwd("~/Documentos/metapopulacao")
d<-read.csv(file="tab.csv")
str(d)
d <- d[d$Local!="Brasil",] # tira o Brasil
d<-droplevels.data.frame(d)
levels(d$Tipo)<-c("NaoOcupada","Ocupada","OcupadaVariosMun","OcupadaNoMun","OcupadaOutroMun","OcupadaExterior","Total")
table(d$Tipo)
locais = unique(d$Local)
tab<-data.frame(Local=locais,
trabalho.estudo = 0,
trabalho.estudo.ii = 0,
so.trabalho = 0,
so.trabalho.ii = 0,
so.estudo = 0,
so.estudo.ii = 0,
pop.total = 0
)
for (i in locais){
dd <- subset(d,Local==i)
tab$trabalho.estudo[tab$Local==i] <-  dd$freqescola[dd$Tipo == "Ocupada"]
tab$trabalho.estudo.ii[tab$Local==i] <- dd$freqescolanomun[dd$Tipo == "OcupadaNoMun"]
tab$so.trabalho[tab$Local==i] <-  dd$naofreqescola[dd$Tipo == "Ocupada"]
tab$so.trabalho.ii[tab$Local==i] <-  dd$naofreqescola[dd$Tipo == "OcupadaNoMun"]
tab$so.estudo[tab$Local==i] <-  dd$freqescola[dd$Tipo == "NaoOcupada"]
tab$so.estudo.ii[tab$Local==i] <-  dd$freqescolanomun[dd$Tipo == "NaoOcupada"]
tab$pop.total[tab$Local==i] <- dd$Total[dd$Tipo == "Total"]
}
tab$pop.ij = (tab$trabalho.estudo - tab$trabalho.estudo.ii + tab$so.trabalho - tab$so.trabalho.ii +
tab$so.estudo - tab$so.estudo.ii)
tab$pop.ii = tab$pop.total - tab$pop.ij
tab
dist <- read.csv("microrregioes-rj/matriz.csv")
head(dist,10)
# igualando os nomes das localidades em dist em tab
levels(tab$Local)<-levels(dist$InputID)
fluxo = expand.grid(origem=tab$Local,destino=tab$Local)
fluxo <- subset(fluxo,origem!=destino)
fluxo$r<-0
fluxo$grav1<-0
fluxo$grav2<-0
for (i in 1:dim(fluxo)[1]){
# r
fluxo$r[i] <- dist$Distance[dist$InputID==fluxo$origem[i] & dist$TargetID==fluxo$destino[i]]
# usando populacao total
mi = tab$pop.total[tab$Local==fluxo$origem[i]]
mj = tab$pop.total[tab$Local==fluxo$destino[i]]
fluxo$grav1[i] <- mi*mj/r^2
# usando populacao movel
mi = tab$pop.ij[tab$Local==fluxo$origem[i]]
mj = tab$pop.ij[tab$Local==fluxo$destino[i]]
fluxo$grav2[i] <- mi*mj/r^2
}
head(fluxo,10)
```
dist$pop <- 0
for (i in 1:dim(dist)[1]){
origem = dist$InputID[i]
dest = dist$TargetID[i]
sub = subset(dist,InputID==origem)
locs = sub[sub$Distance<dist$Distance[i],]
if(dim(locs)[1]>0) dist$pop[i] <- sum(tab$pop.total[tab$Local%in%locs$TargetID])
}
head(dist,10)
fluxo$rad<-0
for (i in 1:dim(fluxo)[1]){
Ti = tab$pop.ij[tab$Local==fluxo$origem[i]]
mi = tab$pop.total[tab$Local==fluxo$origem[i]]
mj = tab$pop.total[tab$Local==fluxo$destino[i]]
sij = dist$pop[dist$InputID==fluxo$origem & dist$TargetID==fluxo$destino]
fluxo$rad[i]<-Ti*mi*mj/((mi+sij)*(mi+mj+sij))
}
head(fluxo,10)
```
fluxo <- expand.grid(origem=tab$Local,destino=tab$Local)
```{r}
head(dist,10)
dist$Distkm <- dist$Distance*110.744
?dlognormal
install.packages("ActuDistns")
library(ActuDistns)
dlognormal(x=0:10,alpha=1.76,sigma=0.24)
library(ActuDistns)
dlognormal(x=0:10,alpha=1.76,sigma=0.24)
dlognormal(x=0:10,alpha=1.76,sigma=0.24)
?ActuDistns-package
?ActuDistns
x=runif(10,min=0,max=1)
y=dlognormal(x)
## The function is currently defined as
function (x, alpha = 1, sigma = 1)
{
ret = ifelse(x <= 0, NaN, dlnorm(x, meanlog = -alpha, sdlog = exp(sigma)))
return(ret)
}
dlnorm(x=0:10,meanlog=1.76,sdlog=0.24)
plot(dlnorm(x=0:10,meanlog=1.76,sdlog=0.24),type="l")
plot(dlnorm(x=seq(0,10,by=.1),meanlog=1.76,sdlog=0.24),type="l")
plot(seq(0,10,by=.1),dlnorm(x=seq(0,10,by=.1),meanlog=1.76,sdlog=0.24),type="l")
plot(seq(0,10,by=.5),dlnorm(x=seq(0,10,by=.5),meanlog=1.76,sdlog=0.24),type="l")
?dlnorm
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta/geraAlerta")
install.packages("rgeos")
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
novosinan2014 <- "dados_brutos/sinan/Dengue2014_23_03_2015.dbf"
novosinan2015 <- "dados_brutos/sinan/Dengue2015_27_04_2015.dbf"
source("organizaDados/organizasinan.r")
library(knitr)
library(markdown)
library(foreign)
library(rmongodb)
source("fun/callmongoclima.r")
source("organizaDados/organizasinan.r")
source("organizaDados//juntaTudo.r")
dadosAPS<-"dados_limpos/dadosAPS_201516.csv"
source("geraAlerta/geraAlerta.r")
library(maptools)
install.packages("maptools")
library(rgeos)
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
install.packages("pander")
library(pander)
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
library(pander)
panderOptions('table.split.table', Inf)
tab <- tail(cidade,n=6)
bdalerta <- paste("../",nalerta,sep="")
d2 <- read.csv(file=bdalerta)
dadosAPS<-"dados_limpos/dadosAPS_201516.csv"
d2 <- read.csv(file=bdalerta)
dadosAPS<-"dados_limpos/dadosAPS_201516.csv"
bdalerta = dadosAPS
d2 <- read.csv(file=bdalerta)
casos <- aggregate(d2[,"casos"],by=list(SE=d2$SE),FUN=sum) # casos brutos
casosm <- aggregate(d2[,"casosm"],by=list(SE=d2$SE),FUN=sum) # casos corrigidos
cidade<- merge(casos,casosm,by="SE")
names(cidade)<-c("SE","casos","casos_corrigidos")
dt<-subset(d2,APS=="AP1")[,c("SE","tweets")]  # tweets
casos <- aggregate(d2[,"casos"],by=list(SE=d2$SE),FUN=sum) # casos brutos
casosm <- aggregate(d2[,"casosm"],by=list(SE=d2$SE),FUN=sum) # casos corrigidos
cidade<- merge(cidade,dt,by="SE")
d2 <- read.csv(file=bdalerta)
dadosAPS<-"dados_limpos/dadosAPS_201516.csv"
bdalerta=dadosAPS
d2 <- read.csv(file=bdalerta)
head(d)
head(d2)
source("organizaDados//juntaTudo.r")
source("geraAlerta/geraAlerta.r")
bdalerta="alertaAPS_201514.csv"
d2 <- read.csv(file=bdalerta)
names(d2)
casos <- aggregate(d2[,"casos"],by=list(SE=d2$SE),FUN=sum) # casos brutos
casosm <- aggregate(d2[,"casosm"],by=list(SE=d2$SE),FUN=sum) # casos corrigidos
cidade<- merge(casos,casosm,by="SE")
names(cidade)<-c("SE","casos","casos_corrigidos")
dt<-subset(d2,APS=="AP1")[,c("SE","tweets")]  # tweets
dc <- aggregate(d2[,"tmin"],by=list(SE=d2$SE),FUN=mean,na.rm=TRUE) #clima
names(dc)[2]<-"tmin"
cidade<- merge(cidade,dt,by="SE")
cidade<- merge(cidade,dc,by="SE")
cidade <- subset(cidade,SE>=201101)
par(mfrow=c(3,1),mar=c(4,4,1,1))
plot(cidade$tweets,type="l",ylab="tweets",axes=FALSE,xlab="",main="Tweets sobre dengue")
axis(2)
le=dim(cidade)[1]
plot(cidade$casos, type="l", xlab="",ylab="casos notificados no RJ",axes=FALSE,main="casos de dengue")
axis(2)
plot(cidade$tmin,type="l",ylab="temperatura",axes=FALSE,xlab="",main="Temperatura mínima")
axis(2)
le=dim(cidade)[1]
axis(1,at=rev(seq(le,1,by=-12)),labels=cidade$SE[rev(seq(le,1,by=-12))],las=2)
panderOptions('table.split.table', Inf)
tab <- tail(cidade,n=6)
rownames(tab) <- NULL
pander(,compact=TRUE,)
?pander
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
require(maptools,quietly = TRUE,warn.conflicts = FALSE)
mapa <- readShapeSpatial("../tabelas/CAPS_SMS.shp",ID="COD_AP_SMS")
mapa <- readShapeSpatial("tabelas/CAPS_SMS.shp",ID="COD_AP_SMS")
source("geraAlerta/geraAlerta.r")
mapa <- readShapeSpatial("tabelas/CAPS_SMS.shp",ID="COD_AP_SMS")
ultima_se <- sort(d2$SE,decreasing =TRUE)[1]
lastab <- d2[d2$SE== ultima_se,c("APS","cor")]
lastab$APS <-  sprintf("%02.1f",as.numeric(gsub("AP","",lastab$APS)))
mapa@data <- merge(mapa@data,lastab,by.x="COD_AP_SMS",by.y="APS")
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
plot(mapa,col=cores[mapa@data$cor])
cores <- c("#0D6B0D","#C8D20F","orange","red")
plot(mapa,col=cores[mapa@data$cor])
coords <- coordinates(mapa)
coords[1,1] <- -43.19
coords[2,2] <- -22.945
text(coords,label=mapa@data$COD_AP_SMS,cex=0.6)
legend("bottomright",fill=cores,c("atividade baixa","Alerta","Transmissão sustentada","atividade alta"),bty="n",cex=0.6)
par(cex.main=0.7)
title(paste0( "Mapa MRJ por APs \n"," Semana ",substr(ultima_se,5,6)," de ",substr(ultima_se,1,4)))
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
library(maptools)
source("geraAlerta/geraAlerta.r")
source("geraAlerta/geraAlerta.r")
