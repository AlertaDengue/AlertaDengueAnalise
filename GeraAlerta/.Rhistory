plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=2,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=2,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=2)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="blue")
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="blue")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="blue")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2)
}
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
lines(d2$Rtur,lty=1)
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2,lwd=3)
}
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2,lwd=3)
}
SE<-d$SE[d$APS=="AP1"]
d2 <- expand.grid(SE=SE,APS=listaAPS)
d2<-merge(d2,d[,c("SE","APS","data","tweets","estacao","casos","casosm","temp.min")],by=c("SE","APS"))
pop<-read.csv(file="../tabelas/populacao2010porAPS_RJ.csv")
d2<-merge(d2,pop)
d2<-d2[order(d2$APS,d2$SE),]
detcli <- function(temp,tempcrit=22,lag=3){
t1<-as.numeric(temp>tempcrit)
le <- length(t1)
ac <- t1[lag:le]
for(i in 1:(lag-1)) ac <- ac+t1[(lag-i):(le-i)]
c(rep(NA,(lag-1)),ac)
}
d2$alertaCli <- NA
for(i in 1:10) d2$alertaCli[which(d2$APS==listaAPS[i])] <-detcli(d2$temp.min[d2$APS==listaAPS[i]])
d2$Rtw <-NA  # Rt do tweet
d2$ptw1 <-NA # Prob(Rt tweet >1)
d2$Rtwlr <-NA # lim inf IC Rt tweet
d2$Rtwur <-NA  # lim sup IC Rt tweet
for(i in 1:10) d2[d2$APS==listaAPS[i],c("Rtw","ptw1","Rtwlr","Rtwur")] <- Rt.beta(d2$tweets[d2$APS==listaAPS[i]])
Rtgreat1 <- function(p1,pcrit=0.8,lag=0){
t1<-as.numeric(p1>pcrit)
ac<-t1
if (lag>0) {
le <- length(t1)
ini <- (lag+1)
ac <- t1[ini:le]
for(i in 1:(ini-1)) ac <- ac+t1[(ini-i):(le-i)]
ac<-c(rep(NA,(ini-1)),ac)
}
ac
}
for(i in 1:10) d2$twgreat1[d2$APS==listaAPS[i]] <-Rtgreat1(d2$ptw1[d2$APS==listaAPS[i]],pcrit=0.90,lag=0)
for(i in 1:10) d2$alertaRtweet[d2$APS==listaAPS[i]] <-Rtgreat1(d2$ptw1[d2$APS==listaAPS[i]],pcrit=0.90,lag=3)
d2$Rt <-NA
d2$pRt1 <-NA
d2$Rtlr <-NA
d2$Rtur <-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],c("Rt","pRt1","Rtlr","Rtur")] <- Rt.beta((d2$casosm[d2$APS==listaAPS[i]]))
d2$pRti <- d2$pRt1
d2$pRti[is.na(d2$pRt1)]<-d2$ptw1[is.na(d2$pRt1)]
for(i in 1:10) d2$Rtgreat1[d2$APS==listaAPS[i]] <-Rtgreat1(d2$pRti[d2$APS==listaAPS[i]],pcrit=0.90,lag=0)
for(i in 1:10) d2$alertaRt[d2$APS==listaAPS[i]] <-Rtgreat1(d2$pRti[d2$APS==listaAPS[i]],pcrit=0.90,lag=3)
par(mfrow=c(2,5),mar=c(3,2,1,1))
for (j in 1:10) {
plot(231:251,d2$Rtlr[d2$APS==listaAPS[j]][231:251],lty=1,ylim=range(0,3),xlab="",ylab="Rt",axes=FALSE,type="l")
polygon(c(231:251,251:231),c(d2$Rtlr[d2$APS==listaAPS[j]][231:251],rev(d2$Rtur[d2$APS==listaAPS[j]][231:251])),col="grey")
axis(2)
mtext(listaAPS[(j)],cex=0.8,line=-1)
box()
abline(h=0.9,col=2,lwd=3)
}
dadosAPS<-"dados_limpos/dadosAPS_201443.csv"
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
vl = which(d2v$alertaRt>=3)
vl = which(d2v$alertaRt>=3)
which(d2v$alertaRt>=3)
which(d2v$alertaRt>=3)+1
?intersection
d2v$verde[ntersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
les = dim(d2v)[1]
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))
d2v$verde <- 0
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
def.cor<-function(d2v){
# d2v = dados de uma ap
les = dim(d2v)[1]
d2v$verde <- 0
d2v$amarelo <-0
d2v$laranja <-0
d2v$vermelho <-0
d2v$verde[intersect(6:les,which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0))]<-1
d2v$amarelo[intersect(6:les,which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3))]<-1
d2v$laranja[intersect(6:les,which(d2v$alertaRt>=3))]<-1
d2v$laranja[intersect(6:les,which(d2v$alertaRt>=3)+1)]<-1 # inercia para desligar
d2v$laranja[intersect(6:les,which(d2v$alertaRt>=3)+2)]<-1 # inercia para desligar
d2v$vermelho[intersect(6:les,which(d2v$alertaCasos==1))]<-1
d2v$vermelho[intersect(6:les,which(d2v$alertaCasos==1)+1)]<-1  # inercia para desligar
d2v$vermelho[intersect(6:les,which(d2v$alertaCasos==1)+2)]<-1   # inercia para desligar
d2v
}
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2$casos[d2$APS==listaAPS[i],]))
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2$casos[d2$APS==listaAPS[i],])
d2[d2$APS==listaAPS[i],]
d2v$verde<-NA
d2v$amarelo<-NA
d2v$laranja<-NA
d2v$vermelho<-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2$casos[d2$APS==listaAPS[i],])
i=1
d2$casos[d2$APS==listaAPS[i],]
d2[d2$APS==listaAPS[i],]
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2[d2$APS==listaAPS[i],])
d2$verde<-NA
d2$amarelo<-NA
d2$laranja<-NA
d2$vermelho<-NA
for(i in 1:10) d2[d2$APS==listaAPS[i],]<-def.cor(d2[d2$APS==listaAPS[i],])
tail(d2)
plot.alerta2<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$verde==1),col="darkgreen",lwd=2)
abline(v=which(d2v$amarelo==1),col="yellow",lwd=2)
abline(v=which(d2v$laranja==1),col="orange",lwd=2)
abline(v=which(d2v$vermelho==1),col="red",lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta2(listaAPS[i])
}
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta2(listaAPS[i])
}
plot.alerta<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0),
col="darkgreen",lwd=2)
abline(v=which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3),col="yellow",lwd=2)
vl = which(d2v$alertaRt>=3)
abline(v=vl,col="orange",lwd=2)
abline(v=(vl+1),col="orange",lwd=2)
abline(v=(vl+2),col="orange",lwd=2)
abline(v=(vl+3),col="orange",lwd=2)
lines(1:les,d2v$casos)
v=which(d2v$alertaCasos==1)
abline(v=v,col="red",pch=16,lwd=2)
abline(v=(v+1),col="red",pch=16,lwd=2)
abline(v=(v+2),col="red",pch=16,lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
plot.alerta<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0),
col="darkgreen",lwd=2)
abline(v=which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3),col="yellow",lwd=2)
vl = which(d2v$alertaRt>=3)
abline(v=vl,col="orange",lwd=2)
abline(v=(vl+1),col="orange",lwd=2)
abline(v=(vl+2),col="orange",lwd=2)
abline(v=(vl+3),col="orange",lwd=2)
lines(1:les,d2v$casos)
v=which(d2v$alertaCasos==1)
abline(v=v,col="red",pch=16,lwd=2)
abline(v=(v+1),col="red",pch=16,lwd=2)
abline(v=(v+2),col="red",pch=16,lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
plot.alerta<-function(ap){
par(mai=c(0,0,0,0),mar=c(4,1,1,1))
d2v <- subset(d2,APS==ap)[52:le,]
les = dim(d2v)[1]
plot(1:les,d2v$casos,type="l",axes=FALSE,ylab="",xlab="")
abline(v=which(d2v$alertaCli<3 & d2v$alertaRtweet<3 & d2v$alertaRt<3 & d2v$alertaCasos==0),
col="darkgreen",lwd=2)
abline(v=which(d2v$alertaCli>=3 | d2v$alertaRtweet>=3),col="yellow",lwd=2)
vl = which(d2v$alertaRt>=3)
abline(v=vl,col="orange",lwd=2)
abline(v=(vl+1),col="orange",lwd=2)
abline(v=(vl+2),col="orange",lwd=2)
abline(v=(vl+3),col="orange",lwd=2)
lines(1:les,d2v$casos)
v=which(d2v$alertaCasos==1)
abline(v=v,col="red",pch=16,lwd=2)
abline(v=(v+1),col="red",pch=16,lwd=2)
abline(v=(v+2),col="red",pch=16,lwd=2)
title(as.character(ap),cex=1.4)
axis(2)
axis(1,at=rev(seq(les,1,by=-16)),labels=d2v$SE[rev(seq(les,1,by=-16))],las=2,cex=0.3)
lines(1:les,d2v$casos,lwd=2)
}
plot.alerta(listaAPS[i])
par(mfrow=c(5,2))
for(i in 1:10) {
#      print(as.character(listaAPS[i]))
#      print(tail(d2[d2$APS==listaAPS[i],c("SE","APS","alertaCli","alertaRtweet","alertaRt","alertaCasos")],n=8))
plot.alerta(listaAPS[i])
}
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
library(knitr)
library(markdown)
require(foreign)
rm(list=ls())
source("fun/callmongoclima.r")
dadosAPS<-"dados_limpos/dadosAPS_201443.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
library(knitr)
library(markdown)
library(foreign)
library(rmongodb)
rm(list=ls())
source("fun/callmongoclima.r")
system(paste("fun/clima.py -i 2014-10-15 -f 2014-11-02 -c SBRJ"))
system(paste("fun/clima.py -i 2014-10-30 -f 2014-11-10 -c SBRJ"))
system(paste("fun/clima.py -i 2014-10-30 -f 2014-11-10 -c SBJR"))
system(paste("fun/clima.py -i 2014-10-30 -f 2014-11-10 -c SBAF"))
system(paste("fun/clima.py -i 2014-10-30 -f 2014-11-10 -c SBGL"))
tail(callmongoclima("galeao") )
tail(callmongoclima("jacarepagua") )
tail(callmongoclima("afonsos") )
tail(callmongoclima("santosdumont") )
knit(input="organizaDados/organizaTemperatura2.rmd",quiet=TRUE,
output="organizaDados/organizaTemperatura2.md",envir=new.env())
system(paste("fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date())) # primeira SE de 2014 ate hoje
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
tail(d)
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
novosinan <- "dados_brutos/sinan/Dengue2014_10_11_2014.dbf"
d <- read.dbf(novosinan)[,c("DT_NOTIFIC","SEM_NOT","NU_ANO","DT_SIN_PRI",
"SEM_PRI","NM_BAIRRO")]
tail(d)
knit(input="organizaDados/organizasinan2014.rmd",quiet=TRUE,
output="organizaDados/organizasinan2014.md",envir=new.env())
tail(callmongoclima("galeao") )
tail(callmongoclima("jacarepagua") )
tail(callmongoclima("afonsos") )
tail(callmongoclima("santosdumont") )
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
tail(d)
knit(input="organizaDados/organizaTemperatura2.rmd",quiet=TRUE,
output="organizaDados/organizaTemperatura2.md",envir=new.env())
knit(input="organizaDados/organizatweets.rmd",quiet=TRUE,
output="organizaDados/organizatweets.md",envir=new.env())
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
tail(callmongoclima("santosdumont") )
tail(d)
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta/organizaDados")
gal<-callmongoclima("galeao")
std <- callmongoclima("santosdumont")
afo <- callmongoclima("afonsos")
jac <- callmongoclima("jacarepagua")
d<- rbind(gal,std,afo,jac)
rm(gal,std,afo,jac)
tail(d)
d$SE<-data2SE(d$data,file="../tabelas/SE.csv",format="%Y-%m-%d")
tail(d)
df<-aggregate(d[,2:3],by=list(SE=d$SE,estacao=d$estacao),FUN=mean,na.rm=TRUE)
tail(df)
d$SE<-data2SE(d$data,file="../tabelas/SE.csv",format="%Y-%m-%d")
tail(d)
df<-aggregate(d[,3],by=list(SE=d$SE,estacao=d$estacao),FUN=mean,na.rm=TRUE)
tail(df)
df<-aggregate(d[,3],by=list(SE=d$SE,data=data,estacao=d$estacao),FUN=mean,na.rm=TRUE)
d$SE<-data2SE(d$data,file="../tabelas/SE.csv",format="%Y-%m-%d")
tail(df)
tail(d)
?aggregate
df<-aggregate(d[,3],by=list(SE=d$SE,estacao=d$estacao),FUN=mean,na.rm=TRUE)
head(df)
listaAPS<-c("AP1","AP2.1","AP2.2","AP3.1","AP3.2","AP3.3","AP4","AP5.1","AP5.2","AP5.3")
dAP<-cbind(APS="AP1",df[df$estacao=="santosdumont",])
dAP<-rbind(dAP,cbind(APS="AP2.1",df[df$estacao=="santosdumont",]))
dAP<-rbind(dAP,cbind(APS="AP2.2",df[df$estacao=="santosdumont",]))
dAP<-rbind(dAP,cbind(APS="AP3.1",df[df$estacao=="galeao",]))
dAP<-rbind(dAP,cbind(APS="AP3.2",df[df$estacao=="galeao",]))
dAP<-rbind(dAP,cbind(APS="AP3.3",df[df$estacao=="galeao",]))
dAP<-rbind(dAP,cbind(APS="AP4",df[df$estacao=="jacarepagua",]))
dAP<-rbind(dAP,cbind(APS="AP5.1",df[df$estacao=="afonsos",]))
dAP<-rbind(dAP,cbind(APS="AP5.2",df[df$estacao=="afonsos",]))
dAP<-rbind(dAP,cbind(APS="AP5.3",df[df$estacao=="afonsos",]))
write.table(dAP,file="../dados_limpos/climasemanaRJ.csv",sep=",",row.names=FALSE)
source("../fun/data2SE.r")
source("../fun/concatweet.r")
dant<-read.csv("../dados_limpos/tweets_week_2010-2013.csv")
comando<-paste("../fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date()) # primeira SE de 2014 ate hoje
system(comando)
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
names(d)[2]<-"rio"
tail(d)
d<-concatweet(d1,d2)
d$SE<-data2SE(d$data,file="../tabelas/SE.csv",format="%Y-%m-%d")
d$SE<-data2SE(d$data,file="../tabelas/SE.csv",format="%Y-%m-%d")
ult<-sum(d$SE==max(d$SE))
pri<-sum(d$SE==min(d$SE))
ult
pri
dsem<-aggregate(d$rio,by=list(SE=d$SE),FUN=sum,na.rm=TRUE)
names(dsem)[2]<-"tweets"
if (ult<7) dsem<-dsem[-(dim(dsem)[1]),]
if (pri<7) dsem<-dsem[-1,]
dsem
ult<-sum(d$SE==max(d$SE))
ult
dsem<-aggregate(d$rio,by=list(SE=d$SE),FUN=sum,na.rm=TRUE)
tail(dsem)
d$SE<-data2SE(d$data,file="../tabelas/SE.csv",format="%Y-%m-%d")
tail(d$SE)
tail(d)
comando<-paste("../fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date()) # primeira SE de 2014 ate hoje
system(comando)
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
names(d)[2]<-"rio"
tail(d)
system(paste("fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date())) # primeira SE de 2014 ate hoje
comando<-paste("../fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date()) # primeira SE de 2014 ate hoje
system(comando)
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
names(d)[2]<-"rio"
tail(d)
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
dadosAPS<-"dados_limpos/dadosAPS_201445.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
knit(input="organizaDados/organizaTemperatura2.rmd",quiet=TRUE,
output="organizaDados/organizaTemperatura2.md",envir=new.env())
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
dadosAPS<-"dados_limpos/dadosAPS_201446.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
system(paste("fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date())) # primeira SE de 2014 ate hoje
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
tail(d)
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
dadosAPS<-"dados_limpos/dadosAPS_201446.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
knit(input="organizaDados/organizatweets.rmd",quiet=TRUE,
output="organizaDados/organizatweets.md",envir=new.env())
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
dadosAPS<-"dados_limpos/dadosAPS_201446.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
setwd("~/Documentos/AlertaDengueAnalise/GeraAlerta")
library(knitr)
library(markdown)
library(foreign)
library(rmongodb)
rm(list=ls())
source("fun/callmongoclima.r")
system(paste("fun/clima.py -i 2014-12-13 -f 2014-12-21 -c SBRJ"))
system(paste("fun/clima.py -i 2014-12-13 -f 2014-12-21 -c SBJR"))
system(paste("fun/clima.py -i 2014-12-03 -f 2014-12-21 -c SBAF"))
system(paste("fun/clima.py -i 2014-12-03 -f 2014-12-21 -c SBGL"))
tail(callmongoclima("galeao") )
tail(callmongoclima("jacarepagua") )
tail(callmongoclima("afonsos") )
tail(callmongoclima("santosdumont") )
#se OK:
knit(input="organizaDados/organizaTemperatura2.rmd",quiet=TRUE,
output="organizaDados/organizaTemperatura2.md",envir=new.env())
system(paste("fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date())) # primeira SE de 2014 ate hoje
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
tail(d)
knit(input="organizaDados/organizatweets.rmd",quiet=TRUE,
output="organizaDados/organizatweets.md",envir=new.env())
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
dadosAPS<-"dados_limpos/dadosAPS_201451.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
alerta<-"alerta/alertaAPS_201451.csv"
knit(input="geraAlerta/relatorio.rmd",quiet=TRUE,envir=new.env())
library(knitr)
library(markdown)
library(foreign)
library(rmongodb)
rm(list=ls())
source("fun/callmongoclima.r")
system(paste("fun/clima.py -i 2014-12-20 -f 2014-12-28 -c SBRJ"))
system(paste("fun/clima.py -i 2014-12-20 -f 2014-12-28 -c SBJR"))
system(paste("fun/clima.py -i 2014-12-20 -f 2014-12-28 -c SBAF"))
system(paste("fun/clima.py -i 2014-12-20 -f 2014-12-28 -c SBGL"))
tail(callmongoclima("galeao") )
tail(callmongoclima("jacarepagua") )
tail(callmongoclima("afonsos") )
tail(callmongoclima("santosdumont") )
knit(input="organizaDados/organizaTemperatura2.rmd",quiet=TRUE,
output="organizaDados/organizaTemperatura2.md",envir=new.env())
system(paste("fun/pega_tweets.py -i 2014-01-05 -f ",Sys.Date())) # primeira SE de 2014 ate hoje
d<-read.csv("tweets_teste.csv",header=TRUE)[,1:2]
tail(d)
knit(input="organizaDados/organizatweets.rmd",quiet=TRUE,
output="organizaDados/organizatweets.md",envir=new.env())
knit(input="organizaDados/juntaTudo.rmd",output="organizaDados/juntaTudo.md",quiet=FALSE, envir=new.env())
markdownToHTML("organizaDados/juntaTudo.md", "html/juntaTudo.html",fragment.only = TRUE)
dadosAPS<-"dados_limpos/dadosAPS_201452.csv"
knit(input="geraAlerta/geraAlerta.rmd",quiet=TRUE,envir=new.env())
markdownToHTML("geraAlerta.md",output="html/Alerta.html", fragment.only = TRUE)
alerta<-"alerta/alertaAPS_201452.csv"
knit(input="geraAlerta/relatorio.rmd",quiet=TRUE,envir=new.env())
